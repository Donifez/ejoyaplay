{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\hp\\\\Desktop\\\\ejoya-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hp\\\\Desktop\\\\ejoya-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hp\\\\Desktop\\\\ejoya-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hp\\\\Desktop\\\\ejoya-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hp\\\\Desktop\\\\ejoya-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\hp\\\\Desktop\\\\ejoya-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\ejoya-admin\\\\src\\\\containers\\\\MiniAdmin\\\\sendnotification.js\";\nimport React, { Component } from \"react\";\nimport \"../../scss/components/__sendnotification.scss\";\nvar checkboxes = [{\n  name: 'check-box-1',\n  key: 'checkBox1',\n  label: 'Check Box 1'\n}, {\n  name: 'check-box-2',\n  key: 'checkBox2',\n  label: 'Check Box 2'\n}, {\n  name: 'check-box-3',\n  key: 'checkBox3',\n  label: 'Check Box 3'\n}, {\n  name: 'check-box-4',\n  key: 'checkBox4',\n  label: 'Check Box 4'\n}];\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.showList = function () {\n      return _this.setState(function (prevState) {\n        return {\n          showActionFilterList: !prevState.showActionFilterList\n        };\n      });\n    };\n\n    _this.state = {\n      showActionFilterList: false,\n      checkedItems: new Map()\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var item = e.target.name;\n      var isChecked = e.target.checked;\n      this.setState(function (prevState) {\n        return {\n          checkedItems: prevState.checkedItems.set(item, isChecked)\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n        onClick: this.showList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"click\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), this.state.showActionFilterList && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, checkboxes.map(function (item) {\n        return React.createElement(\"label\", {\n          key: item.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, item.name, React.createElement(Checkbox, {\n          name: item.name,\n          checked: _this2.state.checkedItems.get(item.name),\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component); // class Send extends Component {\n//     render(){\n//         return(\n//                 <div className=\"notification-wrapper\">\n//                   <div className=\"Selectusers\">\n//                          <p>User</p>\n//                          <p>\n//                          Select All<input className=\"checkbox\" type=\"checkbox\" name=\"users\" value=\"selectall\"/> </p>\n//                   </div>\n//                   <div>\n//                       <form>\n//                           {/* <input type=\"checkbox\"/>User A\n//                           <input type=\"checkbox\"/>User B\n//                           <input type=\"checkbox\"/>User C */}\n//                           <input type=\"checkbox\" name=\"vehicle1\" value=\"Bike\"/> I have a bike<br></br>\n//                           checkboxes.map(item => (\n//           ))\n//                       </form>\n//                   </div>\n//                 </div>\n//         )\n//     }\n// };\n// export default Send;","map":{"version":3,"sources":["C:\\Users\\hp\\Desktop\\ejoya-admin\\src\\containers\\MiniAdmin\\sendnotification.js"],"names":["React","Component","checkboxes","name","key","label","App","props","showList","setState","prevState","showActionFilterList","state","checkedItems","Map","handleChange","bind","e","item","target","isChecked","checked","set","map","get"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,+CAAP;AAKA,IAAMC,UAAU,GAAG,CACf;AACEC,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,GAAG,EAAE,WAFP;AAGEC,EAAAA,KAAK,EAAE;AAHT,CADe,EAMf;AACEF,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,GAAG,EAAE,WAFP;AAGEC,EAAAA,KAAK,EAAE;AAHT,CANe,EAWf;AACEF,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,GAAG,EAAE,WAFP;AAGEC,EAAAA,KAAK,EAAE;AAHT,CAXe,EAgBf;AACEF,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,GAAG,EAAE,WAFP;AAGEC,EAAAA,KAAK,EAAE;AAHT,CAhBe,CAAnB;;IAuBQC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAWnBC,QAXmB,GAWR;AAAA,aAAM,MAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AACvCC,UAAAA,oBAAoB,EAAE,CAACD,SAAS,CAACC;AADM,SAAL;AAAA,OAAvB,CAAN;AAAA,KAXQ;;AAGjB,UAAKC,KAAL,GAAa;AACXD,MAAAA,oBAAoB,EAAE,KADX;AAEXE,MAAAA,YAAY,EAAE,IAAIC,GAAJ;AAFH,KAAb;AAKA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AARiB;AASlB;;;;iCAMYC,C,EAAG;AACd,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAAShB,IAAtB;AACA,UAAMiB,SAAS,GAAGH,CAAC,CAACE,MAAF,CAASE,OAA3B;AACA,WAAKZ,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAAEG,UAAAA,YAAY,EAAEH,SAAS,CAACG,YAAV,CAAuBS,GAAvB,CAA2BJ,IAA3B,EAAiCE,SAAjC;AAAhB,SAAL;AAAA,OAAvB;AACD;;;6BAEQ;AAAA;;AACP,aACE,0CACA;AAAG,QAAA,OAAO,EAAE,KAAKZ,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EACoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADpC,EAEC,KAAKI,KAAL,CAAWD,oBAAX,IACD,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIT,UAAU,CAACqB,GAAX,CAAe,UAAAL,IAAI;AAAA,eACjB;AAAO,UAAA,GAAG,EAAEA,IAAI,CAACd,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGc,IAAI,CAACf,IADR,EAEE,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAEe,IAAI,CAACf,IAArB;AAA2B,UAAA,OAAO,EAAE,MAAI,CAACS,KAAL,CAAWC,YAAX,CAAwBW,GAAxB,CAA4BN,IAAI,CAACf,IAAjC,CAApC;AAA4E,UAAA,QAAQ,EAAE,MAAI,CAACY,YAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADiB;AAAA,OAAnB,CAFJ,CAHA,CADF;AAgBD;;;;EAvCef,KAAK,CAACC,S,GA2C1B;AAKA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAGA;AAEA;AACA;AAEA;AAEA","sourcesContent":["import React,{Component} from \"react\";\r\nimport \"../../scss/components/__sendnotification.scss\";\r\n\r\n\r\n\r\n\r\nconst checkboxes = [\r\n    {\r\n      name: 'check-box-1',\r\n      key: 'checkBox1',\r\n      label: 'Check Box 1',\r\n    },\r\n    {\r\n      name: 'check-box-2',\r\n      key: 'checkBox2',\r\n      label: 'Check Box 2',\r\n    },\r\n    {\r\n      name: 'check-box-3',\r\n      key: 'checkBox3',\r\n      label: 'Check Box 3',\r\n    },\r\n    {\r\n      name: 'check-box-4',\r\n      key: 'checkBox4',\r\n      label: 'Check Box 4',\r\n    },\r\n  ];\r\n  \r\n  class App extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        showActionFilterList: false,\r\n        checkedItems: new Map(),\r\n      }\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n    }\r\n  \r\n    showList = () => this.setState(prevState => ({\r\n          showActionFilterList: !prevState.showActionFilterList\r\n      }));  \r\n  \r\n    handleChange(e) {\r\n      const item = e.target.name;\r\n      const isChecked = e.target.checked;\r\n      this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <>\r\n        <p onClick={this.showList}>click</p><br/>\r\n        {this.state.showActionFilterList &&\r\n        <React.Fragment>\r\n          {\r\n            checkboxes.map(item => (\r\n              <label key={item.key}>\r\n                {item.name}\r\n                <Checkbox name={item.name} checked={this.state.checkedItems.get(item.name)} onChange={this.handleChange} />\r\n              </label>\r\n            ))\r\n          }\r\n        </React.Fragment>}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n// class Send extends Component {\r\n\r\n\r\n    \r\n      \r\n//     render(){\r\n      \r\n//         return(\r\n          \r\n//                 <div className=\"notification-wrapper\">\r\n//                   <div className=\"Selectusers\">\r\n                     \r\n//                          <p>User</p>\r\n//                          <p>\r\n//                          Select All<input className=\"checkbox\" type=\"checkbox\" name=\"users\" value=\"selectall\"/> </p>\r\n                     \r\n//                   </div>\r\n//                   <div>\r\n//                       <form>\r\n                          \r\n//                           {/* <input type=\"checkbox\"/>User A\r\n//                           <input type=\"checkbox\"/>User B\r\n//                           <input type=\"checkbox\"/>User C */}\r\n//                           <input type=\"checkbox\" name=\"vehicle1\" value=\"Bike\"/> I have a bike<br></br>\r\n\r\n//                           checkboxes.map(item => (\r\n           \r\n//           ))\r\n\r\n                          \r\n//                       </form>\r\n//                   </div>\r\n\r\n\r\n//                 </div>\r\n           \r\n//         )\r\n//     }\r\n\r\n// };\r\n\r\n// export default Send;"]},"metadata":{},"sourceType":"module"}